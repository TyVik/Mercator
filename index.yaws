<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Mercator Puzzle!</title>
    <link href="//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&subset=all" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="main.css">
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=geometry"></script>
    <script src="js/google.maps.Polygon.getBounds.js"></script>
    <script src="js/google.maps.Polygon.moveTo.js"></script>
    <script type="text/javascript">
<erl>
countCountries() ->
  {ok, C} = pgsql:connect("localhost", "mercator", "mercator", [{database, "mercator"}]),
  {ok, _, [{Count}|_]} = pgsql:squery(C, "SELECT count(*) from \"Countries\""),
  ok = pgsql:close(C),
  binary_to_list(Count).

unquote([]) -> [];
unquote([92|[92|[92|[92|T]]]]) -> [92, unquote(T)]; % why???
unquote([92|[H|T]]) -> [H, unquote(T)];
unquote([H|T]) -> [H,  unquote(T)].

polygon([]) -> "";
polygon(Raw) ->
  K = binary_to_list(Raw),
  L = string:substr(K, 3, length(K) - 4), % уберём кавычки postgres
  unquote(L).

answer([]) -> "";
answer(Raw) ->
  K = binary_to_list(Raw),
  L = string:substr(K, 3, length(K) - 4),
  [Point1Lat|[Point1Lon|[Point2Lat|[Point2Lon]]]] = string:tokens(L, ","),
  "new google.maps.LatLngBounds(new google.maps.LatLng(" ++ Point1Lat ++ ", " ++ Point1Lon ++ "), new google.maps.LatLng(" ++ Point2Lat ++ "," ++ Point2Lon ++ "))".

country(Name) ->
  {ok, C} = pgsql:connect("localhost", "mercator", "mercator", [{database, "mercator"}]),
  {ok, _, [{Rows}]} = pgsql:squery(C, "SELECT \"Polygon\" from \"Countries\" where \"Name\" = \'" ++ Name ++ "\'"),
  ok = pgsql:close(C),
  polygon(Rows).

echoJSVar({Countries, Answers}) ->
  "var countries = [" ++ Countries ++ "]; \n" ++ "var answers = [" ++ Answers ++ "];".

parsePolygons([]) -> [];
parsePolygons([{Row}|T]) -> polygon(Row) ++ ", " ++ parsePolygons(T).

parsePolygonsAndAnswers([]) -> {"", ""};
parsePolygonsAndAnswers([Country|T]) ->
  {Row, Answer} = Country,
  {TailPolygon, TailAnswer} = parsePolygonsAndAnswers(T),
  {polygon(Row) ++ ", " ++ TailPolygon, answer(Answer) ++ ", " ++ TailAnswer}.

countries(Count) ->
  {ok, C} = pgsql:connect("localhost", "mercator", "mercator", [{database, "mercator"}]),
  {ok, _, Rows} = pgsql:squery(C, "SELECT \"Polygon\", \"Answer\" from \"Countries\" where \"Available\" = TRUE order by RANDOM() limit " ++ Count),
  ok = pgsql:close(C),
  parsePolygonsAndAnswers(Rows).

out(Arg) ->
  case queryvar(Arg, "name") of
    {ok, Name} -> {html, echoJSVar({country(Name), ""})};
    undefined ->
      case queryvar(Arg, "count") of
        {ok, Count} -> {html, echoJSVar(countries(Count))}
      end
  end.
</erl>
    </script>
    <script type="text/javascript" src="main.js"></script>
  </head>

  <body>
    <div id="map"></div>
  </body>

  <script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-18071-1']);
  _gaq.push(['_trackPageview']);
</script>
</html>
